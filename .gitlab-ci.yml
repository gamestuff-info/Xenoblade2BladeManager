stages:
  - build
  - stage
  - deploy
  - notify

variables:
  BUILD_NUMBER: ${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  IMAGE_BASENAME: ${CI_REGISTRY}/gamestuff.info/xeno2

build_app:
  stage: build
  image: wodby/php:7.2
  cache:
    paths:
      - app/vendor
  artifacts:
    paths:
      - app/vendor
    expire_in: 1 day
  script:
    - cd app
    - composer install --no-dev --no-suggest --prefer-dist --optimize-autoloader --no-interaction --no-scripts
    ## DELETE THE LINE BELOW - it kludges more debug info into the exception message
    - cp ../DriverManager.php vendor/doctrine/dbal/lib/Doctrine/DBAL/DriverManager.php

build_assets:
  stage: build
  image: wodby/node:8
  cache:
    paths:
      - app/node_modules
  artifacts:
    paths:
      - app/public/dist
    expire_in: 1 day
  script:
    - cd app
    - yarn install --non-interactive  --frozen-lockfile --production
    - yarn run build

stage_php:
  stage: stage
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build --pull -t "${IMAGE_BASENAME}/php:${BUILD_NUMBER}" -f php.Dockerfile .
    - docker push "${IMAGE_BASENAME}/php:${BUILD_NUMBER}"

stage_php_cli:
  stage: stage
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build --pull -t "${IMAGE_BASENAME}/php-cli:${BUILD_NUMBER}" -f php.Dockerfile --build-arg 'var_owner=wodby:wodby' .
    - docker push "${IMAGE_BASENAME}/php-cli:${BUILD_NUMBER}"

stage_nginx:
  stage: stage
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build --pull -t "${IMAGE_BASENAME}/nginx:${BUILD_NUMBER}" -f nginx.Dockerfile .
    - docker push "${IMAGE_BASENAME}/nginx:${BUILD_NUMBER}"

deploy:
  stage: deploy
  image: lwolf/kubectl_deployer
  environment:
    name: prod
    url: http://xeno2.gamestuff.info
  only:
    - master
  dependencies: []
  script:
    - /bin/sh deploy.sh ${CI_ENVIRONMENT_SLUG}

sentry:
  stage: notify
  image: getsentry/sentry-cli
  only:
    - master
  dependencies: []
  script:
    - sentry-cli releases new -p xeno2 ${BUILD_NUMBER}
    - sentry-cli releases set-commits --auto ${BUILD_NUMBER}
    - sentry-cli releases deploys ${BUILD_NUMBER} new -e prod
