stages:
  - build
  - stage
  - deploy

variables:
  DOCKER_COMPOSE_FILES: -f docker-compose.yml -f docker-compose.prod.yml -f docker-compose.gitlab.yml

build_assets:
  image: node
  stage: build
  cache:
    paths:
      - node_modules
  artifacts:
    paths:
      - app/public/dist
    expire_in: 1 day
  script:
    - cd app
    - yarn install
    - yarn run build

build_app:
  image: php:7.2-alpine
  stage: build
  cache:
    paths:
      - app/vendor
  artifacts:
    paths:
      - app/vendor
    expire_in: 1 day
  script:
    - apk update
    - apk add composer
    - cd app
    - composer install

build_images:
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    CI_IMAGE_NAME: $CI_REGISTRY/gamestuff.info/xeno2
  stage: stage
  script:
    - apk update
    - apk add --no-cache py-pip
    - pip install docker-compose
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose ${DOCKER_COMPOSE_FILES} pull --ignore-pull-failures php
    - docker-compose ${DOCKER_COMPOSE_FILES} pull --ignore-pull-failures nginx
    - docker-compose ${DOCKER_COMPOSE_FILES} build php nginx
    - docker tag ${CI_IMAGE_NAME}/php:${CI_COMMIT_SHA} ${CI_IMAGE_NAME}/php:${CI_COMMIT_REF_SLUG}
    - docker tag ${CI_IMAGE_NAME}/nginx:${CI_COMMIT_SHA} ${CI_IMAGE_NAME}/nginx:${CI_COMMIT_REF_SLUG}
    - docker-compose ${DOCKER_COMPOSE_FILES} push php nginx

deploy:
  image: google/cloud-sdk:alpine
  stage: deploy
  environment:
    name: prod
    url: http://xeno2.gamestuff.info
  variables:
    CI_IMAGE_NAME: $CI_REGISTRY/gamestuff.info/xeno2
  script:
    - gcloud components install kubectl
    - kubectl set image deployment/xeno2 php="${CI_IMAGE_NAME}/php:${CI_COMMIT_SHA}" nginx="${CI_IMAGE_NAME}/nginx:${CI_COMMIT_SHA}"
    - kubectl rollout status deployment/xeno2
  only:
    - docker
