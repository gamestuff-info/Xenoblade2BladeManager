name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    name: Test (PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}
    defaults:
      run:
        working-directory: './app'
    strategy:
      fail-fast: true
      matrix:
        operating-system:
          - ubuntu-20.04
        php-versions:
          - 7.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          ini-values: display_errors=On
          extensions: intl, iconv, json, mbstring, pcntl, pdo_sqlite, xml, zip
#          coverage: xdebug
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install PHP dependencies
        run: |
          composer install --prefer-dist --optimize-autoloader
          php bin/phpunit install
      - name: Build assets
        run: |
          yarn install --non-interactive  --frozen-lockfile
          yarn run build
      - name: Run Tests
#        run: php vendor/bin/simple-phpunit -c phpunit.xml.dist --coverage-text
        run: php vendor/bin/simple-phpunit -c phpunit.xml.dist
